{"version":3,"sources":["components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["IsLinkActive","isActive","cn","Navigation","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeoplePage","useState","people","setPeople","loading","setLoading","error","setError","selectedPersonId","useParams","useEffect","fetchData","peopleWithParents","map","mother","find","motherName","father","fatherName","length","born","died","PageNotFound","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c79e90f1.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst IsLinkActive = ({ isActive }: { isActive: boolean }) => {\n  return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={IsLinkActive}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={IsLinkActive}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then((response) => response.json());\n}\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface PersonLinkProps {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<boolean | null>(null);\n\n  const { selectedPersonId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getPeople();\n\n        setPeople(response);\n      } catch (e) {\n        setError(true);\n        setLoading(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const peopleWithParents = people.map((person) => {\n    const mother = people.find(({ name }) => name === person.motherName);\n    const father = people.find(({ name }) => name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  if (loading) {\n    return <Loader/>\n  }\n\n  if (error) {\n    return <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n        {    people.length === 0 ? (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleWithParents.map((person) => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={cn({\n                      'has-background-warning':\n                        selectedPersonId === person.slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother ? (\n                        <PersonLink person={person.mother} />\n                      ) : (\n                        person.motherName || '-'\n                      )}\n                    </td>\n                    <td>\n                      {person.father ? (\n                        <PersonLink person={person.father} />\n                      ) : (\n                        person.fatherName || '-'\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeopleTable';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedPersonId\" />\n          </Route>\n          <Route path=\"/page-not-found\" element={<PageNotFound />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}